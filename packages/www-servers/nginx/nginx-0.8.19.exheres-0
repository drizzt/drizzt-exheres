# Copyright 2009 Timothy Redaelli <timothy@redaelli.eu>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'nginx-0.7.43.ebuild', which is:
#     Copyright 1999-2009 Gentoo Foundation

require common-metadata

SLOT="0"
PLATFORMS="~amd64"
MYOPTIONS="addition debug fastcgi flv imap pcre perl random-index sub zlib
    status [[ description = [ Enables stub_status module ] ]]
    webdav [[ description = [ Enables webdav support ] ]]
"
DEPENDENCIES="
    build+run:
        pcre? ( dev-libs/pcre )
        dev-libs/openssl [[
            description = [ newer nginx versions are very broken without it ]
        ]]
        zlib? ( sys-libs/zlib )
        perl? ( dev-lang/perl )
    post:
        user/${PN}
        group/${PN}"

option_with_no_inverse() {
    option "${1}" && option_with ${1#!} ${2}
}

option_with_http_modules() {
    for s in "${@}"; do
        local opt=${s% *}
        local tmp=${s#* }
        local tmp=${tmp#!}
        option_with_no_inverse ${opt} http_${tmp/-/_}_module
    done
}

src_prepare() {
    sed -i 's/ make/ \\$(MAKE)/' auto/lib/perl/make
}

src_configure() {
    ./configure \
        --prefix=/usr \
        --conf-path=/etc/${PN}/${PN}.conf \
        --http-log-path=/var/log/${PN}/access_log \
        --error-log-path=/var/log/${PN}/error_log \
        --pid-path=/var/run/${PN}.pid \
        --http-client-body-temp-path=/var/tmp/${PN}/client \
        --http-proxy-temp-path=/var/tmp/${PN}/proxy \
        --http-fastcgi-temp-path=/var/tmp/${PN}/fastcgi \
        --with-md5-asm --with-sha1-asm \
        --with-ld-opt="${LDFLAGS}" \
        $(option_with_http_modules addition !fastcgi flv "!zlib gzip" pcre perl \
            "status stub-status" "webdav dav" sub random-index) \
        $(option_with_no_inverse debug) \
        $(option_with_no_inverse imap) \
        || die "configure failed"
}

src_compile() {
    emake CC="${CC}" LD="\${CC}" OTHERLDFLAGS="${LDFLAGS}"
}

src_install() {
    keepdir /var/log/${PN} /var/tmp/${PN}/{client,proxy,fastcgi}
    
    dosbin objs/nginx
    newinitd "${FILES}"/nginx.initd nginx

    insinto /etc/nginx
    doins "${FILES}"/nginx.conf
    doins conf/*
    dodoc CHANGES{,.ru} README

    option perl && emake -C objs/src/http/modules/perl install DESTDIR="${IMAGE}"
}

pkg_postinst() {
    # FIXME porting install_cert
    ewarn "You should generate your certificates and put it in /etc/ssl/${PN}/"
}
